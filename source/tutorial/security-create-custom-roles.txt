.. _create-user-defined-role:

===================
Define Custom Roles
===================

.. default-domain:: mongodb

Roles grant users access to MongoDB resources. MongoDB provides a
number of :doc:`built-in roles </reference/built-in-roles>` that
administrators can use to control access to a MongoDB system. However,
if these roles cannot describe the desired set of privileges, you can
create new roles in a particular database.

.. include:: /includes/fact-roles-privileges-scope.rst

To create a new role, use the :method:`db.createRole()` method,
specifying the privileges in the ``privileges`` array and the inherited
roles in the ``roles`` array.

MongoDB uses the combination of the database name and the role name to
uniquely define a role. Each role is scoped to the database in which
you create the role, but MongoDB stores all role information in the
:data:`admin.system.roles` collection in the ``admin`` database.

.. _define-roles-prereq:

Prerequisites
~~~~~~~~~~~~~

.. include:: /includes/access-create-role.rst

.. _create-role-to-manage-ops:

Create a Role to Manage Current Operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example creates a role named ``manageOpRole`` which
provides only the privileges to run both :method:`db.currentOp()` and
:method:`db.killOp()`. [#built-in-roles1]_

.. note::

   .. versionchanged:: 3.2.9

      On :binary:`~bin.mongod` instances, users do not need any specific
      privileges to run to view their own operations or to kill their
      own operations. See :method:`db.currentOp()` and
      :method:`db.killOp()` for details.

.. include:: /includes/steps/create-role-manage-ops.rst

.. [#built-in-roles1] 
   The built-in role :authrole:`clusterMonitor` also provides the
   privilege to run :method:`db.currentOp()` along with other
   privileges, and the built-in role :authrole:`hostManager` provides
   the privilege to run :method:`db.killOp()` along with other
   privileges.

.. _create-role-for-mongostat:

Create a Role to Run ``mongostat``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example creates a role named ``mongostatRole`` that
provides only the privileges to run :binary:`~bin.mongostat`.
[#built-in-roles2]_

.. include:: /includes/steps/create-role-mongostat.rst

.. [#built-in-roles2] The built-in role
   :authrole:`clusterMonitor` also provides the privilege to run
   :binary:`~bin.mongostat` along with other
   privileges.

.. _create-role-for-system-views:

Create a Role to Drop ``system.views`` Collection across Databases
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following example creates a role named
``dropSystemViewsAnyDatabase`` that provides the privileges to drop the
``system.views`` collection in any database.

.. include:: /includes/steps/create-role-dropSystemViews.rst
